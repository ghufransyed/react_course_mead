{"version":3,"sources":["../../../src/playground/counter.js"],"names":["Counter","props","handleAddOne","bind","handleMinusOne","handleReset","state","count","parseInt","localStorage","getItem","setState","e","console","log","message","prevProps","prevState","setItem","React","Component","defaultProps","ReactDOM","render","document","getElementById"],"mappings":";;;;;;;;;;IAAMA,O;;;AACF,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA,sHACTA,KADS;;AAEf,cAAKC,YAAL,GAAkB,MAAKA,YAAL,CAAkBC,IAAlB,OAAlB;AACA,cAAKC,cAAL,GAAoB,MAAKA,cAAL,CAAoBD,IAApB,OAApB;AACA,cAAKE,WAAL,GAAiB,MAAKA,WAAL,CAAiBF,IAAjB,OAAjB;AACA,cAAKG,KAAL,GAAa;AACTC,mBAAON,MAAMM;AADJ,SAAb;AALe;AAQlB;;;;4CAEmB;AAChB,gBAAI;AACA,oBAAIA,QAAQC,SAASC,aAAaC,OAAb,CAAqB,OAArB,CAAT,EACR,EADQ,CAAZ;;AAGA,oBAAIH,KAAJ,EAAW;AACP,yBAAKI,QAAL,CAAc;AAAA,+BAAO,EAAEJ,YAAF,EAAP;AAAA,qBAAd;AACH;AACJ,aAPD,CAOE,OAAMK,CAAN,EAAS;AACPC,wBAAQC,GAAR,CAAY,gBAAgBF,EAAEG,OAA9B;AACH;AACJ;;;2CAEkBC,S,EAAWC,S,EAAW;AACrC,gBAAIA,UAAUV,KAAV,KAAoB,KAAKD,KAAL,CAAWC,KAAnC,EAAyC;AACrCE,6BAAaS,OAAb,CAAqB,OAArB,EAA8B,KAAKZ,KAAL,CAAWC,KAAzC;AACAM,wBAAQC,GAAR,CAAY,6BAAZ;AACH;AACJ;;;uCAEa;AACV,iBAAKH,QAAL,CAAc,UAACM,SAAD,EAAe;AACzB,uBAAO,EAACV,OAAOU,UAAUV,KAAV,GAAkB,CAA1B,EAAP;AACH,aAFD;AAGH;;;yCAEe;AACZ,iBAAKI,QAAL,CAAc,UAACM,SAAD,EAAe;AACzB,uBAAO,EAACV,OAAOU,UAAUV,KAAV,GAAkB,CAA1B,EAAP;AACH,aAFD;AAGH;;;sCAEY;AACT,iBAAKI,QAAL,CAAc,YAAM;AAChB,uBAAO,EAACJ,OAAO,CAAR,EAAP;AACH,aAFD;AAGF;;;iCAGO;AACL,mBACI;AAAA;AAAA;AACI;AAAA;AAAA;AAAA;AAAY,yBAAKD,KAAL,CAAWC;AAAvB,iBADJ;AAEI;AAAA;AAAA;AACA;AAAA;AAAA,0BAAQ,IAAG,YAAX;AACQ,uCAAU,QADlB;AAEQ,qCAAS,KAAKL,YAFtB;AAAA;AAAA,qBADA;AAIA;AAAA;AAAA,0BAAQ,IAAG,aAAX;AACQ,uCAAU,QADlB;AAEQ,qCAAS,KAAKE,cAFtB;AAAA;AAAA,qBAJA;AAOA;AAAA;AAAA,0BAAQ,IAAG,aAAX;AACQ,uCAAU,QADlB;AAEQ,qCAAS,KAAKC,WAFtB;AAAA;AAAA;AAPA;AAFJ,aADJ;AAgBH;;;;EAnEiBc,MAAMC,S;;AAoE3B;;AAEDpB,QAAQqB,YAAR,GAAuB;AACnBd,WAAO;AADY,CAAvB;;AAKAe,SAASC,MAAT,CAAgB,oBAAC,OAAD,OAAhB,EACIC,SAASC,cAAT,CAAwB,KAAxB,CADJ","file":"counter.js","sourcesContent":["class Counter extends React.Component{\n    constructor(props) {\n        super(props);\n        this.handleAddOne=this.handleAddOne.bind(this);\n        this.handleMinusOne=this.handleMinusOne.bind(this);\n        this.handleReset=this.handleReset.bind(this);\n        this.state = {\n            count: props.count\n        };\n    }\n\n    componentDidMount() {\n        try {\n            let count = parseInt(localStorage.getItem('count'),\n                10);\n\n            if (count) {\n                this.setState(() => ({ count }));\n            }\n        } catch(e) {\n            console.log(\"Exception: \" + e.message);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevState.count !== this.state.count){\n            localStorage.setItem('count', this.state.count);\n            console.log('saving data to localStorage');\n        }\n    }\n\n    handleAddOne(){\n        this.setState((prevState) => {\n            return {count: prevState.count + 1}\n        });\n    };\n\n    handleMinusOne(){\n        this.setState((prevState) => {\n            return {count: prevState.count - 1}\n        });\n    };\n\n    handleReset(){\n        this.setState(() => {\n            return {count: 0}\n        });\n     };\n\n\n    render() {\n        return (\n            <div>\n                <h1>Count: {this.state.count}</h1>\n                <span>\n                <button id=\"buttonPlus\"\n                        className=\"button\"\n                        onClick={this.handleAddOne}>+1</button>\n                <button id=\"buttonMinus\"\n                        className=\"button\"\n                        onClick={this.handleMinusOne}>-1</button>\n                <button id=\"buttonReset\"\n                        className=\"button\"\n                        onClick={this.handleReset}>Reset</button>\n            </span>\n            </div>\n            )\n    };\n};\n\nCounter.defaultProps = {\n    count: 0\n}\n\n\nReactDOM.render(<Counter />,\n    document.getElementById('app'));\n"]}